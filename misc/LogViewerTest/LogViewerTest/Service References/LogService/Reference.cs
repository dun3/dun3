//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogViewerTest.LogService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogService.ILogServiceContract")]
    public interface ILogServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/FindLastLogId", ReplyAction="http://tempuri.org/ILogServiceContract/FindLastLogIdResponse")]
        LogViewerTest.Service.Log.DTO.LogIdDTO FindLastLogId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/FindLastLogIdByIncidentId", ReplyAction="http://tempuri.org/ILogServiceContract/FindLastLogIdByIncidentIdResponse")]
        LogViewerTest.Service.Log.DTO.LogIdDTO FindLastLogIdByIncidentId(System.Guid incidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/IsLastLogId", ReplyAction="http://tempuri.org/ILogServiceContract/IsLastLogIdResponse")]
        bool IsLastLogId(LogViewerTest.Service.Log.DTO.LogIdDTO id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/IsLastLogIdByIncidentId", ReplyAction="http://tempuri.org/ILogServiceContract/IsLastLogIdByIncidentIdResponse")]
        bool IsLastLogIdByIncidentId(System.Guid incidentId, LogViewerTest.Service.Log.DTO.LogIdDTO id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/FindSummaryLogItemzByIncidentId", ReplyAction="http://tempuri.org/ILogServiceContract/FindSummaryLogItemzByIncidentIdResponse")]
        System.Collections.Generic.List<LogViewerTest.Service.Log.DTO.SummaryLogItemDTO> FindSummaryLogItemzByIncidentId(System.Guid incidentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/FindLogItem", ReplyAction="http://tempuri.org/ILogServiceContract/FindLogItemResponse")]
        LogViewerTest.Service.Log.DTO.LogItemDTO FindLogItem(LogViewerTest.Service.Log.DTO.LogIdDTO id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/CreateLogItem", ReplyAction="http://tempuri.org/ILogServiceContract/CreateLogItemResponse")]
        LogViewerTest.Service.Log.DTO.LogItemDTO CreateLogItem(LogViewerTest.Service.Log.DTO.LogItemDTO logItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogServiceContract/CreateExceptionLogItem", ReplyAction="http://tempuri.org/ILogServiceContract/CreateExceptionLogItemResponse")]
        LogViewerTest.Service.Log.DTO.ExceptionLogItemDTO CreateExceptionLogItem(LogViewerTest.Service.Log.DTO.ExceptionLogItemDTO exceptionLogItem);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ILogServiceContractChannel : LogViewerTest.LogService.ILogServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LogServiceContractClient : System.ServiceModel.ClientBase<LogViewerTest.LogService.ILogServiceContract>, LogViewerTest.LogService.ILogServiceContract {
        
        public LogServiceContractClient() {
        }
        
        public LogServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LogViewerTest.Service.Log.DTO.LogIdDTO FindLastLogId() {
            return base.Channel.FindLastLogId();
        }
        
        public LogViewerTest.Service.Log.DTO.LogIdDTO FindLastLogIdByIncidentId(System.Guid incidentId) {
            return base.Channel.FindLastLogIdByIncidentId(incidentId);
        }
        
        public bool IsLastLogId(LogViewerTest.Service.Log.DTO.LogIdDTO id) {
            return base.Channel.IsLastLogId(id);
        }
        
        public bool IsLastLogIdByIncidentId(System.Guid incidentId, LogViewerTest.Service.Log.DTO.LogIdDTO id) {
            return base.Channel.IsLastLogIdByIncidentId(incidentId, id);
        }
        
        public System.Collections.Generic.List<LogViewerTest.Service.Log.DTO.SummaryLogItemDTO> FindSummaryLogItemzByIncidentId(System.Guid incidentId) {
            return base.Channel.FindSummaryLogItemzByIncidentId(incidentId);
        }
        
        public LogViewerTest.Service.Log.DTO.LogItemDTO FindLogItem(LogViewerTest.Service.Log.DTO.LogIdDTO id) {
            return base.Channel.FindLogItem(id);
        }
        
        public LogViewerTest.Service.Log.DTO.LogItemDTO CreateLogItem(LogViewerTest.Service.Log.DTO.LogItemDTO logItem) {
            return base.Channel.CreateLogItem(logItem);
        }
        
        public LogViewerTest.Service.Log.DTO.ExceptionLogItemDTO CreateExceptionLogItem(LogViewerTest.Service.Log.DTO.ExceptionLogItemDTO exceptionLogItem) {
            return base.Channel.CreateExceptionLogItem(exceptionLogItem);
        }
    }
}
